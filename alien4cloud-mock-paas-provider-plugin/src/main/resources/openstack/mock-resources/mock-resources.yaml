tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: mock-plugin-types
  template_author: alien4cloud
  template_version: ${project.version}

description: "Defines resources for the mock plugin, mocking openstack configuration."

imports:
  - tosca-normative-types:${normative.version}

data_types:
  org.alien4cloud.data.mock.SubnetConfig:
    derived_from: tosca.datatypes.Root
    properties:
      ip_version:
        type: integer
        default: 4
        constraints:
          - valid_values: [ 4, 6 ]
      cidr:
        type: string

node_types:
  org.alien4cloud.nodes.mock.Compute:
    derived_from: tosca.nodes.Compute
    properties:
      imageId:
        type: string
        required: true
      flavorId:
        type: string
        required: true
  org.alien4cloud.nodes.mock.BlockStorage:
    derived_from: tosca.nodes.BlockStorage
  org.alien4cloud.nodes.mock.Network:
    derived_from: tosca.nodes.Network
    properties:
      subnet:
        required: false
        type: org.alien4cloud.data.mock.SubnetConfig

policy_types:
  org.alien4cloud.policies.mock.SimpleConditionPolicyType:
    derived_from: tosca.policies.Root
    description: This is a sample policy type with simple definition
    metadata:
      sample_meta: a meta data
      anoter_meta: another meta data
    properties:
      sample_property:
        type: string
    targets: ["tosca.nodes.Compute", "org.alien4cloud.Group"]
    triggers:
      default:
        description: This is the trigger of the sample policy
        event_type: cpu
        schedule:
          start_time: 2016-04-04-15T00:00:00Z
          end_time: 2020-04-04-15T00:00:00Z
        action: scale
  org.alien4cloud.mock.policies.AntiAffinity:
    derived_from: tosca.policies.Placement
    description: A sample policy that injects availability zones to it's target on a round robin basis.
    metadata:
      # pluginId:pluginBean:phase
      a4c_policy_impl: alien4cloud-mock-paas-provider:mock-anti-affinity-modifier:post-node-match
    properties:
      availability_zones:
        required: true
        type: list
        entry_schema:
          type: string
