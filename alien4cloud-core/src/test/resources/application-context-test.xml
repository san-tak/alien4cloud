<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mockito="http://www.mockito.org/spring/mockito"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.mockito.org/spring/mockito http://www.mockito.org/spring/mockito.xsd">

    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:component-scan
      base-package="alien4cloud.dao,
        alien4cloud.configuration,
        alien4cloud.component,
        alien4cloud.topology,
        alien4cloud.common,
        alien4cloud.deployment,
        alien4cloud.rest.*,
        alien4cloud.tosca.context,
        alien4cloud.tosca.*,
        alien4cloud.images,
        alien4cloud.application,
        alien4cloud.csar.*,
        org.elasticsearch.mapping,
        alien4cloud.orchestrators,
        alien4cloud.paas,
        alien4cloud.paas.plan,
        alien4cloud.repository.*,
        alien4cloud.tosca,
        alien4cloud.suggestions,
        alien4cloud.plugin,
        alien4cloud.utils.services,
        org.alien4cloud.alm.service,
        org.alien4cloud.git,
        org.alien4cloud.tosca.catalog,
        org.alien4cloud.tosca.exporter,
        org.alien4cloud.tosca.editor,
        org.alien4cloud.tosca.topology,
        org.alien4cloud.tosca.variable,
        org.alien4cloud.tosca.services,
        org.alien4cloud.secret.services,
        alien4cloud.ui.form">
        <context:exclude-filter type="regex"
                                expression="alien4cloud.orchestrators.services.OrchestratorSecurityService"/>
        <context:exclude-filter type="regex" expression="alien4cloud.configuration.ApplicationBootstrap"/>
        <context:exclude-filter type="regex" expression="alien4cloud.security.groups.DefaultGroup"/>
        <context:exclude-filter type="regex" expression="alien4cloud.deployment.DeploymentTopologyDTOBuilder"/>
    </context:component-scan>

    <bean id="alienconfigFactory" class="alien4cloud.utils.AlienConfigFactory"/>
    <bean id="alienconfig" factory-bean="alienconfigFactory" factory-method="get"/>
    <alias name="alienconfig" alias="elasticsearchConfig"/>
    <context:property-placeholder properties-ref="alienconfig"/>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <bean id="resourcePermissionService" class="alien4cloud.authorization.ResourcePermissionService"/>
    <mockito:mock id="group-dao" class="alien4cloud.security.groups.IAlienGroupDao"/>
    <mockito:mock id="user-dao" class="alien4cloud.security.users.IAlienUserDao"/>
    <mockito:mock id="pluginmodifierregistry"
                  class="org.alien4cloud.alm.deployment.configuration.flow.modifiers.PluginModifierRegistry"/>
    <bean id="IESMetaPropertiesSearchContextBuilder"
                  class="alien4cloud.metaproperty.MPSearchContextBuilderMock"/>
</beans>