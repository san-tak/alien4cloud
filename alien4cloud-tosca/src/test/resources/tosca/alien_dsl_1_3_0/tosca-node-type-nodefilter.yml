tosca_definitions_version: alien_dsl_1_3_0

tosca_default_namespace:   # Optional. default namespace (schema, types version)
template_name:             # Optional name of this service template
template_author:           # Optional author of this service template
template_version:          # Optional version of this service template

description: This is an example of a single line description (no folding).

imports:
  - tosca-normative-types:1.0.0.wd03-SNAPSHOT

dsl_definitions:
  # list of YAML alias anchors (or macros)

topology_template:
  inputs:
    # list of global input parameters

  node_templates:
    # list of node templates

  groups:
    # list of groups defined in service template

  outputs:
    # list of output parameters

node_types:
  my_company.my_types.MyAppNodeType:
    derived_from: tosca.nodes.SoftwareComponent
    description: My company’s custom applicaton
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurences: [1,1]
          node_filter:
            properties:
              - os_type: { valid_values: [ "linux", "unix" ] }
              - os_mix:
                - valid_values: [ "linux", "unix" ]
                - in_range: [ 1, 4 ]
              - os_arch : [ valid_values: [ "x86_64", "x86_32" ], in_range: [ 1, 4 ] ]
            capabilities:
              # My “host” Compute node needs these properties:
              - host:
                  properties:
                    - num_cpus: { in_range: [ 1, 4 ] }
                    - mem_size: { greater_or_equal: 2 MB }
              # and should also support this type of encryption and properties:
              - mytypes.capabilities.compute.encryption:
                  properties:
                    - algorithm: { equal: aes }
                    - keylength: [ valid_values: [ 128, 256 ], equal: 128 ]
      - other:
          capability: tosca.capabilities.Endpoint
          occurences: [0, unbounded]

capability_types:
  # list of capability type definitions

relationship_types:
  # list of relationship type definitions

artifact_types:
  # list of artifact type definitions
