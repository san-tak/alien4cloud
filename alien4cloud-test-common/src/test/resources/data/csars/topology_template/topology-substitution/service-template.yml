tosca_definitions_version: alien_dsl_1_3_0

metadata:
  template_name: net.sample.MysqlSubsystem
  template_version: 1.0.0-SNAPSHOT
  template_author: tests

description: Alien4Cloud generated service template

imports:
  - mysql-type:2.0.0-SNAPSHOT
  - tosca-normative-types:1.0.0.wd03-SNAPSHOT

topology_template:
  inputs:
    db_port:
      type: integer
      required: true
      default: 3306
      description: The port on which the underlying database service will listen to data.
    db_name:
      type: string
      required: true
      default: wordpress
      description: The logical name of the database.
    db_user:
      type: string
      required: true
      default: pass
      description: The special user account used for database administration.
    db_password:
      type: string
      required: true
      default: pass
      description: The password associated with the user account provided in the ‘db_user’ property.
  substitution_mappings:
    node_type: tosca.nodes.Root
    capabilities:
      host: [ Mysql, host ]
    requirements:
      network: [ Compute, network ]
  node_templates:
    Mysql:
      type: alien.nodes.Mysql
      properties:
        db_port: { get_input: db_port }
        db_name: { get_input: db_name }
        db_user: { get_input: db_user }
        db_password: { get_input: db_password }
        bind_address: true
        storage_path: /mountedStorage
      requirements:
        - host:
            node: Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        database_endpoint:
          properties:
            protocol: tcp
            secure: false
      artifacts:
        configs:
          implementation: configs
          type: tosca.artifacts.File
          description: configs
    Compute:
      type: tosca.nodes.Compute
      capabilities:
        scalable:
          properties:
            max_instances: 1
            min_instances: 1
            default_instances: 1
  outputs:
    Mysql_database_endpoint_port:
      value: { get_property: [ Mysql, database_endpoint, port ] }
